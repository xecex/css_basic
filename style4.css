.normal {
    background-color: red;
}

.box {
    background-color: pink;

    /* Content box（ボックスの横幅、縦幅）*/

    width: 200px;
    height: 200px;

    /* Padding box（ボックス内の上、右、下、左に隙間を作る）*/

    padding: 8px 12px 16px 20px;

    /* Margin box（ボックス外の上、右、下、左に隙間を作る）*/

    margin: 8px 12px 16px 20px;

    /* Border box */
    /* 5pxは線の太さ、solidは線の種類 */
    /* border-topなどで上だけに線をつけることもできる */

    border: 5px solid black;

    /* box-sizingプロパティは、Content boxで指定した横幅、縦幅になるように整えてくれる */
    /* よく使用される!! */

    box-sizing: border-box;

    /*

    html {
        box-sizing: border-box;
    }
    *, *::before, *::after {
        box-sizing: inherit;
    }

    で全ての要素に対してbox-sizingを適用することができる

    */

}

.margin {
    background-color: lightblue;

    /* マージンの相殺 */
    /* マージン同士が打ち消し合ってお互いの大きい方が採用される */
    /* ボックス間のマージンは重なり合っていることに注意 */

    margin-top: 16px;
}

/* div, span {
    background-color: orange;
    width: 100px;
    height: 100px;
} */

.example {
    background-color: pink;
    padding: 20px;
}

/* インラインタグは他の要素のことを邪魔してしまう */

.example span {
    margin: 20px;
    border: 1px solid black;
    padding: 20px;
    background-color: lightgreen;
}

/* ブロックタグは他の要素のことを邪魔しない */

.example div {
    margin: 20px;
    border: 1px solid black;
    padding: 20px;
    background-color: lightgreen;
}

/* 使用するタグがブロックボックスなのかインラインボックスなのか理解しておくこと!! */


/*

displayプロパティを使用すると、ブロック要素をインライン要素として扱うことができる（もちろん逆も可能）

.example div {
    display: inline;
    margin: 20px;
    border: 1px solid black;
    padding: 20px;
    background-color: lightgreen;
}

*/

/* inlin-blockを使用することでインラインとブロックを合体させたような表現をすることができる */